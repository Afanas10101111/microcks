name: package-native
on:
  push:
    paths-ignore:
      - '.gitignore'
      - 'LICENSE'
      - 'README*'
jobs:
  build-native-images:
    runs-on: ubuntu-latest
    environment: Build
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build Java components
        run: mvn -B -DskipTests -Pprod install

      - name: Set environment for branch
        run: |
          set -x
          if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
            echo "IMAGE_TAG=latest-native" >> "$GITHUB_ENV"
            echo "PACKAGE_IMAGE=true" >> "$GITHUB_ENV"
          elif [[ $GITHUB_REF == 'refs/heads/1.9.x' ]]; then
            echo "IMAGE_TAG=nightly-native" >> "$GITHUB_ENV"
            echo "PACKAGE_IMAGE=true" >> "$GITHUB_ENV"
          elif [[ $GITHUB_REF == "refs/tags/$GITHUB_REF_NAME" ]]; then
            echo "IMAGE_TAG=$GITHUB_REF_NAME-native" >> "$GITHUB_ENV"
            echo "PACKAGE_IMAGE=true" >> "$GITHUB_ENV"
          else
            echo "PACKAGE_IMAGE=false" >> "$GITHUB_ENV"
          fi

      - name: Set up QEMU
        if: matrix.arch == 'arm64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.arch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Set builder image for amd64
        if: matrix.arch == 'amd64'
        run: |
          echo "BUILDER_IMAGE=dashaun/builder@sha256:92811b61280130099527b40c7650c871187a7e1cebb21744d93e480fc34cbcb0" >> "$GITHUB_ENV"

      - name: Set builder image for arm64
        if: matrix.arch == 'arm64'
        run: |
          echo "BUILDER_IMAGE=dashaun/builder@sha256:378bdc9fd7bdba105d64f294a8a7ca168dce5e496cad22307ccabb66fb571f9a" >> "$GITHUB_ENV"

      - name: Build native image for ${{ matrix.arch }}
        run: |
          cd ${{github.workspace}}/distro/uber
          mvn -Pnative spring-boot:build-image -Dspring-boot.build-image.imageName=microcks/microcks-uber:$IMAGE_TAG-${{ matrix.arch }} -Dspring-boot.build-image.builder=$BUILDER_IMAGE

      - name: Save native image for ${{ matrix.arch }}
        uses: ishworkh/docker-image-artifact-upload@v1
        with:
          image: "microcks/microcks-uber:${{ env.IMAGE_TAG }}-${{ matrix.arch }}"

  push-app-images:
    runs-on: ubuntu-latest
    environment: Build
    needs: build-native-images
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    steps:
      - name: Set environment for branch
        run: |
          set -x
          if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
            echo "IMAGE_TAG=latest-native" >> "$GITHUB_ENV"
            echo "PACKAGE_IMAGE=true" >> "$GITHUB_ENV"
          elif [[ $GITHUB_REF == 'refs/heads/1.9.x' ]]; then
            echo "IMAGE_TAG=nightly-native" >> "$GITHUB_ENV"
            echo "PACKAGE_IMAGE=true" >> "$GITHUB_ENV"
          elif [[ $GITHUB_REF == "refs/tags/$GITHUB_REF_NAME" ]]; then
            echo "IMAGE_TAG=$GITHUB_REF_NAME-native" >> "$GITHUB_ENV"
            echo "PACKAGE_IMAGE=true" >> "$GITHUB_ENV"
          else
            echo "PACKAGE_IMAGE=false" >> "$GITHUB_ENV"
          fi

      - name: Get saved images for ${{ matrix.arch }}
        uses: ishworkh/docker-image-artifact-download@v1
        with:
          image: "microcks/microcks-uber:${{ env.IMAGE_TAG }}-${{ matrix.arch }}"

      - name: Login to Quay.io and Docker Hub registries
        run: |
          echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin docker.io

      - name: Tag image
        run: "docker tag microcks/microcks-uber:${{ env.IMAGE_TAG }}-${{ matrix.arch }} quay.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}-${{ matrix.arch }}"

      - name: Push images
        run: "docker push quay.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}-${{ matrix.arch }}"

  create-app-multiarch-manifests:
    needs: push-app-images
    environment: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set environment for branch
        run: |
          set -x
          if [[ $GITHUB_REF == 'refs/heads/master' ]]; then
            echo "IMAGE_TAG=latest-native" >> "$GITHUB_ENV"
            echo "PACKAGE_IMAGE=true" >> "$GITHUB_ENV"
          elif [[ $GITHUB_REF == 'refs/heads/1.9.x' ]]; then
            echo "IMAGE_TAG=nightly-native" >> "$GITHUB_ENV"
            echo "PACKAGE_IMAGE=true" >> "$GITHUB_ENV"
          elif [[ $GITHUB_REF == "refs/tags/$GITHUB_REF_NAME" ]]; then
            echo "IMAGE_TAG=$GITHUB_REF_NAME-native" >> "$GITHUB_ENV"
            echo "PACKAGE_IMAGE=true" >> "$GITHUB_ENV"
          else
            echo "PACKAGE_IMAGE=false" >> "$GITHUB_ENV"
          fi

      - name: Login to Quay.io and Docker Hub registries
        run: |
          echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME }} --password-stdin quay.io
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin docker.io

      - name: Create and push multi-arch manifests
        shell: bash
        run: |
          docker manifest create quay.io/microcks/microcks-uber:${{ env.IMAGE_TAG }} \
            -a quay.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}-amd64 \
            -a quay.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}-arm64
          docker manifest push quay.io/microcks/microcks-uber:${{ env.IMAGE_TAG }}