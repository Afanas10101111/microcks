{{- if not .Values.microcks.ingressSecretRef }}
---
kind: Secret
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-microcks-ingress-secret"
  labels:
    app: "{{ .Values.appName }}"
    group: microcks
type: kubernetes.io/tls
data:
{{ ( include "microcks-ingress.gen-certs" . ) | indent 2 }}
{{- end }}
{{- if .Values.mongodb.install }}
---
kind: Secret
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-mongodb-connection"
  labels:
    app: "{{ .Values.appName }}"
    container: mongodb
    group: microcks
type: kubernetes.io/basic-auth
stringData:
  username: "{{ .Values.mongodb.username }}"
data:
  {{- if .Values.mongodb.password }}
  password: {{ .Values.mongodb.password | b64enc | quote }}
  {{- else }}
  password: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  adminPassword: {{ randAlphaNum 40 | b64enc | quote }}
{{- end }}
{{- if .Values.keycloak.install }}
{{- if not .Values.keycloak.ingressSecretRef }}
---
kind: Secret
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-keycloak-ingress-secret"
  labels:
    app: "{{ .Values.appName }}"
    group: microcks
type: kubernetes.io/tls
data:
{{ ( include "keycloak-ingress.gen-certs" . ) | indent 2 }}
{{- end }}
---
kind: Secret
apiVersion: v1
metadata:
  name: "{{ .Values.appName }}-keycloak-admin"
  labels:
    app: "{{ .Values.appName }}"
    container: keycloak
    group: microcks
type: kubernetes.io/basic-auth
stringData:
  username: "{{ .Values.keycloak.adminUsername }}"
  postgresUsername: "{{ .Values.keycloak.username }}"
data:
  {{- if .Values.keycloak.adminPassword }}
  password: {{ .Values.keycloak.adminPassword | b64enc | quote }}
  {{- else }}
  password: {{ randAlphaNum 40 | b64enc | quote }}
  {{- end }}
  {{- if .Values.keycloak.password }}
  postgresPassword: {{ .Values.keycloak.password | b64enc | quote }}
  {{- else }}
  postgresPassword: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
{{- end }}